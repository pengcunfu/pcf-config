name: Publish to PyPI

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9.13'
    
    - name: Install build dependencies
      run: |
        python -m pip install pip==22.0.4
        pip install setuptools==68.0.0 build==1.3.0 twine==6.2.0 packaging==25.0 wheel
    
    - name: Build package
      run: python -m build
    
    - name: Check package
      run: twine check dist/*
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v'))
    environment: 
      name: pypi
      url: https://pypi.org/p/pcf-config
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/
    
    - name: Install twine
      run: |
        python -m pip install pip==22.0.4
        pip install setuptools==68.0.0 twine==6.2.0 packaging==25.0
    
    - name: Check environment variables configuration
      run: |
        echo "Checking environment variables configuration..."
        if [ -n "${{ vars.TESTPYPI }}" ]; then
          echo "✅ TESTPYPI variable is configured"
        else
          echo "❌ TESTPYPI variable is NOT configured"
        fi
        if [ -n "${{ vars.PYPI }}" ]; then
          echo "✅ PYPI variable is configured"
        else
          echo "❌ PYPI variable is NOT configured"
        fi
    
    - name: Create .pypirc configuration
      run: |
        echo "Creating .pypirc configuration file..."
        cat > ~/.pypirc << EOF
        [distutils]
        index-servers =
            pypi
            testpypi

        [pypi]
        username = __token__
        password = ${{ vars.PYPI }}

        [testpypi]
        repository = https://test.pypi.org/legacy/
        username = __token__
        password = ${{ vars.TESTPYPI }}
        EOF
        echo "✅ .pypirc configuration created"
    
    - name: Publish to TestPyPI
      run: |
        echo "Publishing to TestPyPI..."
        twine upload --repository testpypi dist/*
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    
    - name: Publish to PyPI
      run: |
        echo "Publishing to PyPI..."
        twine upload dist/*
      if: github.event_name == 'release'
